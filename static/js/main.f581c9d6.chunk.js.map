{"version":3,"sources":["components/Logo/assets/logo.svg","components/Logo/Logo.js","components/Button/Button.js","components/Header/Header.js","components/withDnDContext/withDnDContext.js","components/SchedulerComponent/SchedulerComponent.js","components/Meeting/Meeting.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","es","to","className","src","logo","alt","Button","_ref","type","text","link","modificator","disabled","clazz","concat","Header","components_Logo_Logo","components_Button_Button","DragDropContext","HTML5Backend","withDragDropContext","SchedulerComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","prevClick","schedulerData","prev","setEvents","DemoData","events","setState","viewModel","nextClick","next","onViewChange","view","setViewType","viewType","showAgenda","isEventPerspective","onSelectDate","date","setDate","eventClicked","event","alert","id","title","ops1","ops2","newEvent","slotId","slotName","start","end","item","newFreshId","forEach","resourceId","bgColor","addEvent","updateEventStart","newStart","updateEventEnd","newEnd","moveEvent","SchedulerData","Date","ViewTypes","Day","setResources","resources","state","lib_default","eventItemClick","viewEventClick","viewEventText","viewEvent2Text","viewEvent2Click","Component","Meeting","React","App","components_Header_Header","components_SchedulerComponent_SchedulerComponent","path","Meeting_Meeting_Meeting","ReactDOM","render","App_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f581c9d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.774e34d9.svg\";","import React from 'react'\r\nimport logo from './assets/logo.svg'\r\nimport {Link} from \"@reach/router\";\r\n\r\nconst Logo = () => (\r\n    <Link to=\"/\" className=\"logo\">\r\n        <img src={logo} alt=\"\"/>\r\n    </Link>\r\n)\r\n\r\nexport default Logo","import React from 'react'\r\nimport './Button.css'\r\nimport {Link} from \"@reach/router\"\r\n\r\nconst Button = ({type, text, link, modificator, disabled}) => {\r\n\r\n    const clazz = `button ${modificator}`\r\n\r\n    if (type === 'submit') {\r\n        return <button type=\"submit\" className={clazz} disabled={disabled}>{text}</button>\r\n    } else if (type === 'link') {\r\n        return <Link to={link} className={clazz} disabled={disabled}>{text}</Link>\r\n    } else {\r\n        return <button type=\"button\" className={clazz} disabled={disabled}>{text}</button>\r\n    }\r\n\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Logo from '../Logo/Logo'\r\nimport './Header.css'\r\nimport Button from '../Button/Button'\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <Logo/>\r\n        <Button\r\n            type=\"link\"\r\n            text='Создать встречу'\r\n            link=\"/meeting\"\r\n            modificator=\"button--1\"/>\r\n    </header>\r\n)\r\n\r\nexport default Header","import {DragDropContext} from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\n\r\nexport default DragDropContext(HTML5Backend);","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru';\r\nimport Scheduler, {SchedulerData, ViewTypes, DATE_FORMAT, DemoData} from 'react-big-scheduler'\r\nimport withDragDropContext from '../withDnDContext/withDnDContext'\r\nimport 'react-big-scheduler/lib/css/style.css'\r\n\r\nclass SchedulerComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //let schedulerData = new SchedulerData(new moment(\"2017-12-18\").format(DATE_FORMAT), ViewTypes.Week);\r\n        let schedulerData = new SchedulerData(new Date(), ViewTypes.Day, false, false, {\r\n            // minuteStep: 15\r\n        });\r\n        // schedulerData.localeMoment.locale('en');\r\n        schedulerData.setResources(DemoData.resources);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.state = {\r\n            viewModel: schedulerData\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {viewModel} = this.state;\r\n        return (\r\n            <Scheduler schedulerData={viewModel}\r\n                        prevClick={this.prevClick}\r\n                        nextClick={this.nextClick}\r\n                        onSelectDate={this.onSelectDate}\r\n                        onViewChange={this.onViewChange}\r\n                        eventItemClick={this.eventClicked}\r\n                        viewEventClick={this.ops1}\r\n                        viewEventText=\"Ops 1\"\r\n                        viewEvent2Text=\"Ops 2\"\r\n                        viewEvent2Click={this.ops2}\r\n                        updateEventStart={this.updateEventStart}\r\n                        updateEventEnd={this.updateEventEnd}\r\n                        moveEvent={this.moveEvent}\r\n                        newEvent={this.newEvent}\r\n            />\r\n        )\r\n    }\r\n\r\n    prevClick = (schedulerData)=> {\r\n        schedulerData.prev();\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    nextClick = (schedulerData)=> {\r\n        schedulerData.next();\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    onViewChange = (schedulerData, view) => {\r\n        schedulerData.setViewType(view.viewType, view.showAgenda, view.isEventPerspective);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    onSelectDate = (schedulerData, date) => {\r\n        schedulerData.setDate(date);\r\n        schedulerData.setEvents(DemoData.events);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    eventClicked = (schedulerData, event) => {\r\n        alert(`You just clicked an event: {id: ${event.id}, title: ${event.title}}`);\r\n    };\r\n\r\n    ops1 = (schedulerData, event) => {\r\n        alert(`You just executed ops1 to event: {id: ${event.id}, title: ${event.title}}`);\r\n    };\r\n\r\n    ops2 = (schedulerData, event) => {\r\n        alert(`You just executed ops2 to event: {id: ${event.id}, title: ${event.title}}`);\r\n    };\r\n\r\n    newEvent = (schedulerData, slotId, slotName, start, end, type, item) => {\r\n        let newFreshId = 0;\r\n        schedulerData.events.forEach((item) => {\r\n            if(item.id >= newFreshId)\r\n                newFreshId = item.id + 1;\r\n        });\r\n\r\n        let newEvent = {\r\n            id: newFreshId,\r\n            title: 'New event you just created',\r\n            start: start,\r\n            end: end,\r\n            resourceId: slotId,\r\n            bgColor: 'purple'\r\n        }\r\n        schedulerData.addEvent(newEvent);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    updateEventStart = (schedulerData, event, newStart) => {\r\n        schedulerData.updateEventStart(event, newStart);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    updateEventEnd = (schedulerData, event, newEnd) => {\r\n        schedulerData.updateEventEnd(event, newEnd);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n\r\n    moveEvent = (schedulerData, event, slotId, slotName, start, end) => {\r\n        schedulerData.moveEvent(event, slotId, slotName, start, end);\r\n        this.setState({\r\n            viewModel: schedulerData\r\n        })\r\n    }\r\n}\r\n\r\nexport default withDragDropContext(SchedulerComponent)","import React from 'react'\r\nimport './Meeting.css'\r\n\r\nexport default class Meeting extends React.Component{\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"meeting\">\r\n\t\t\t\t<div className=\"meeting__container\">\r\n\t\t\t\t\t<div className=\"meeting__top\">\r\n\t\t\t\t\t\t<div className=\"meeting__title\">Новая встреча</div>\r\n\t\t\t\t\t\t<div className=\"meeting__close\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}","import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport '../../index.css'\r\nimport './App.css'\r\nimport {Router} from \"@reach/router\";\r\nimport SchedulerComponent from '../SchedulerComponent/SchedulerComponent'\r\nimport Meeting from '../Meeting/Meeting'\r\n\r\nexport default class App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"app__top\">\r\n                    <Header/>\r\n                </div>\r\n                <div className=\"app__main\">\r\n                    <Router>\r\n                        <SchedulerComponent path=\"/\"/>\r\n                        <Meeting path=\"/meeting\"/>\r\n                    </Router>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}